<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="10" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-15T12:08:47Z" name="Suite" finished-at="2024-06-15T12:08:48Z" duration-ms="749">
    <groups>
    </groups>
    <test started-at="2024-06-15T12:08:47Z" name="Test1" finished-at="2024-06-15T12:08:47Z" duration-ms="198">
      <class name="basic.Account">
        <test-method signature="currentAccount()[pri:0, instance:basic.Account@60b4beb4]" started-at="2024-06-15T17:38:47Z" name="currentAccount" finished-at="2024-06-15T17:38:47Z" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- currentAccount -->
        <test-method signature="loanAccount()[pri:0, instance:basic.Account@60b4beb4]" started-at="2024-06-15T17:38:47Z" name="loanAccount" finished-at="2024-06-15T17:38:47Z" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loanAccount -->
        <test-method signature="savingAccount()[pri:0, instance:basic.Account@60b4beb4]" started-at="2024-06-15T17:38:47Z" name="savingAccount" finished-at="2024-06-15T17:38:47Z" duration-ms="9" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at basic.Account.savingAccount(Account.java:13)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- savingAccount -->
      </class> <!-- basic.Account -->
      <class name="basic.Payment">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:basic.Payment@41005828]" started-at="2024-06-15T17:38:47Z" name="beforetest" finished-at="2024-06-15T17:38:47Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method is-config="true" signature="beforeclass()[pri:0, instance:basic.Payment@41005828]" started-at="2024-06-15T17:38:47Z" name="beforeclass" finished-at="2024-06-15T17:38:47Z" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method is-config="true" signature="before()[pri:0, instance:basic.Payment@41005828]" started-at="2024-06-15T17:38:47Z" name="before" finished-at="2024-06-15T17:38:47Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="creditCard()[pri:0, instance:basic.Payment@41005828]" started-at="2024-06-15T17:38:47Z" name="creditCard" finished-at="2024-06-15T17:38:47Z" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creditCard -->
        <test-method is-config="true" signature="after()[pri:0, instance:basic.Payment@41005828]" started-at="2024-06-15T17:38:47Z" name="after" finished-at="2024-06-15T17:38:47Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method is-config="true" signature="before()[pri:0, instance:basic.Payment@41005828]" started-at="2024-06-15T17:38:47Z" name="before" finished-at="2024-06-15T17:38:47Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="debitCard()[pri:0, instance:basic.Payment@41005828]" started-at="2024-06-15T17:38:47Z" name="debitCard" finished-at="2024-06-15T17:38:47Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- debitCard -->
        <test-method is-config="true" signature="after()[pri:0, instance:basic.Payment@41005828]" started-at="2024-06-15T17:38:47Z" name="after" finished-at="2024-06-15T17:38:47Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method signature="upi()[pri:0, instance:basic.Payment@41005828]" started-at="2024-06-15T17:38:47Z" name="upi" finished-at="2024-06-15T17:38:47Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- upi -->
        <test-method is-config="true" signature="before()[pri:0, instance:basic.Payment@41005828]" started-at="2024-06-15T17:38:47Z" name="before" finished-at="2024-06-15T17:38:47Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="after()[pri:0, instance:basic.Payment@41005828]" started-at="2024-06-15T17:38:47Z" name="after" finished-at="2024-06-15T17:38:47Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:basic.Payment@41005828]" started-at="2024-06-15T17:38:47Z" name="afterclass" finished-at="2024-06-15T17:38:47Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:basic.Payment@41005828]" started-at="2024-06-15T17:38:47Z" name="aftertest" finished-at="2024-06-15T17:38:47Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
      </class> <!-- basic.Payment -->
    </test> <!-- Test1 -->
    <test started-at="2024-06-15T12:08:47Z" name="Test2" finished-at="2024-06-15T12:08:48Z" duration-ms="130">
      <class name="basic.Account">
        <test-method signature="currentAccount()[pri:0, instance:basic.Account@768fc0f2]" started-at="2024-06-15T17:38:47Z" name="currentAccount" finished-at="2024-06-15T17:38:47Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- currentAccount -->
        <test-method signature="loanAccount()[pri:0, instance:basic.Account@768fc0f2]" started-at="2024-06-15T17:38:47Z" name="loanAccount" finished-at="2024-06-15T17:38:47Z" duration-ms="33" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loanAccount -->
        <test-method signature="savingAccount()[pri:0, instance:basic.Account@768fc0f2]" started-at="2024-06-15T17:38:47Z" name="savingAccount" finished-at="2024-06-15T17:38:47Z" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at basic.Account.savingAccount(Account.java:13)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- savingAccount -->
      </class> <!-- basic.Account -->
      <class name="basic.Payment">
        <test-method is-config="true" signature="beforesuit()[pri:0, instance:basic.Payment@71329995]" started-at="2024-06-15T17:38:47Z" name="beforesuit" finished-at="2024-06-15T17:38:47Z" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforesuit -->
        <test-method is-config="true" signature="beforetest()[pri:0, instance:basic.Payment@71329995]" started-at="2024-06-15T17:38:47Z" name="beforetest" finished-at="2024-06-15T17:38:47Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method is-config="true" signature="beforeclass()[pri:0, instance:basic.Payment@71329995]" started-at="2024-06-15T17:38:47Z" name="beforeclass" finished-at="2024-06-15T17:38:47Z" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method is-config="true" signature="before()[pri:0, instance:basic.Payment@71329995]" started-at="2024-06-15T17:38:47Z" name="before" finished-at="2024-06-15T17:38:47Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="creditCard()[pri:0, instance:basic.Payment@71329995]" started-at="2024-06-15T17:38:47Z" name="creditCard" finished-at="2024-06-15T17:38:47Z" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creditCard -->
        <test-method is-config="true" signature="after()[pri:0, instance:basic.Payment@71329995]" started-at="2024-06-15T17:38:47Z" name="after" finished-at="2024-06-15T17:38:47Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method signature="debitCard()[pri:0, instance:basic.Payment@71329995]" started-at="2024-06-15T17:38:47Z" name="debitCard" finished-at="2024-06-15T17:38:47Z" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- debitCard -->
        <test-method is-config="true" signature="before()[pri:0, instance:basic.Payment@71329995]" started-at="2024-06-15T17:38:47Z" name="before" finished-at="2024-06-15T17:38:47Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method is-config="true" signature="after()[pri:0, instance:basic.Payment@71329995]" started-at="2024-06-15T17:38:47Z" name="after" finished-at="2024-06-15T17:38:47Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method is-config="true" signature="before()[pri:0, instance:basic.Payment@71329995]" started-at="2024-06-15T17:38:47Z" name="before" finished-at="2024-06-15T17:38:47Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="upi()[pri:0, instance:basic.Payment@71329995]" started-at="2024-06-15T17:38:47Z" name="upi" finished-at="2024-06-15T17:38:47Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- upi -->
        <test-method is-config="true" signature="after()[pri:0, instance:basic.Payment@71329995]" started-at="2024-06-15T17:38:47Z" name="after" finished-at="2024-06-15T17:38:47Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:basic.Payment@71329995]" started-at="2024-06-15T17:38:47Z" name="aftertest" finished-at="2024-06-15T17:38:48Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:basic.Payment@71329995]" started-at="2024-06-15T17:38:47Z" name="afterclass" finished-at="2024-06-15T17:38:47Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
        <test-method is-config="true" signature="aftersuit()[pri:0, instance:basic.Payment@71329995]" started-at="2024-06-15T17:38:48Z" name="aftersuit" finished-at="2024-06-15T17:38:48Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersuit -->
      </class> <!-- basic.Payment -->
    </test> <!-- Test2 -->
  </suite> <!-- Suite -->
</testng-results>
