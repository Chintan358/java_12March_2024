source code writing : 
editors : 
-notepad/notepad++
-netbeans
-elipse------------------I
-intelij idea
-vs code

ex : 
Demo.java

JRE : java runtime environement
***********************************
compilation
java compiler - javac

ex : 
Demo.class
***********************************
execute
jvm : java vertual machine
**********************************
JDK : java development kit [jre, compiler,jvm]
*********************************

class Demo
{
	public static void main(String args[])
	{
		System.out.println("Hello java");
	}
}

st1 : save
Demo.java

st-2 compile
javac Demo.java

st-3 execute
java Demo
******************************
Variables : 
************

Datatypes : 

byte	0	1 byte      2^7-1 to -2^7 : 127 to -128
short	0	2 byte     2^15-1 to -2^15 : 32767 to -32768
int		0	4 byte
long	0	8 byte

float	0.0 4 byte
double	0.0 8 byte

char		2 byte
boolean false 1 bit

String null

1 bit
8 bit = 1 byte
1024 byte = 1kb
1024 kb = 1 mb
1024 mb = 1 gb
1024 gb = 1 tb

************************************************
Operators : 
************************************************
Arithmatic operator
+,-,*,/,%



***********************************************
Statements

conditional : 
if
if-else
switch-case


looping : 
for
while
do-while

*****************************************
OOPs : 

class
object
encaptulation
inheritance
polymorphism
abstraction




Class : 
logical entity

Object : 
real time entity

Object scan have state and behaviour

state / datamemeber / variables
behaviour / function memeber / method


method : 

accessmodifier returtye* methodname*(args)
{
	//logic
}

******************************
data memeber and function member can  be of two types 
static - class memeber
non-static - instance memember

*************************

Abstraction : 
Abstract class - partial
-abstract method and instanc emethod

Interface - 100%
-abstract method

abstract method : 
method without body
public void display();

instanc emethod : 
method with body
public void display()
{
}




























